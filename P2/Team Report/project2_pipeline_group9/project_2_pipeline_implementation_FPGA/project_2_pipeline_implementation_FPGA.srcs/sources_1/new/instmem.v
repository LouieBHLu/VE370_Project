module inst_mem(inst, pc, reset);
input [31:0] pc;
input reset;

output [31:0] inst;

reg [31:0] m [0:150];// A modelled memory. The size is relatively small.


wire [31:0] inst;

assign inst=m[pc>>2];


always @(posedge reset) begin
if(reset==1'b1) begin
//m[0]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[1]=32'b00100000000010010000000000110111;//addi $t1, $zero, 0x37
//m[2]=32'b00000001000010011000000000100100;//and $s0, $t0, $t1
//m[3]=32'b00000001000010011000000000100101; //or $s0, $t0, $t1
//m[4]=32'b10101100000100000000000000000100; //sw $s0, 4($zero)
//m[5]=32'b10101100000010000000000000001000; //sw $t0, 8($zero)
//m[6]=32'b00000001000010011000100000100000; //add $s1, $t0, $t1
//m[7]=32'b00000001000010011001000000100010;//sub $s2, $t0, $t1
//m[8]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[9]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[10]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[11]=32'b00010010001100100000000000010010; //beq $s1, $s2, error0
//m[12]=32'b10001100000100010000000000000100; //lw $s1, 4($zero)
//m[13]=32'b00110010001100100000000001001000; //andi $s2, $s1, 0x48
//m[14]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[15]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[16]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[17]=32'b00010010001100100000000000001111; //beq $s1, $s2, error1
//m[18]=32'b10001100000100110000000000001000; //lw $s3, 8($zero)
//m[19]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[20]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[21]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[22]=32'b00010010000100110000000000001101; //beq $s0, $s3, error2
//m[23]=32'b00000010010100011010000000101010; //slt $s4, $s2, $s1 (Last)
//m[24]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[25]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[26]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
//m[27]=32'b00010010100000000000000000001111; //beq $s4, $0, EXIT
//m[28]=32'b00000010001000001001000000100000; //add $s2, $s1, $0
//m[29]=32'b00001000000000000000000000010111; //j Last
//m[30]=32'b00100000000010000000000000000000; //addi $t0, $0, 0(error0)
//m[31]=32'b00100000000010010000000000000000; //addi $t1, $0, 0
//m[32]=32'b00001000000000000000000000111111; //j EXIT
//m[33]=32'b00100000000010000000000000000001; //addi $t0, $0, 1(error1)
//m[34]=32'b00100000000010010000000000000001; //addi $t1, $0, 1
//m[35]=32'b00001000000000000000000000111111; //j EXIT
//m[36]=32'b00100000000010000000000000000010; //addi $t0, $0, 2(error2)
//m[37]=32'b00100000000010010000000000000010; //addi $t1, $0, 2
//m[38]=32'b00001000000000000000000000111111; //j EXIT
//m[39]=32'b00100000000010000000000000000011; //addi $t0, $0, 3(error3)
//m[40]=32'b00100000000010010000000000000011; //addi $t1, $0, 3
//m[41]=32'b00001000000000000000000000111111; //j EXIT
//m[42] = 0;
//m[43] = 0;
//m[44] = 0;
//m[45] = 0;
//m[46] = 0;
//m[47] = 0;
//m[48] = 0;
//m[49] = 0;
//m[50] = 0;
//m[51] = 0;
//m[52] = 0;
//m[53] = 0;
//m[54] = 0;
//m[55] = 0;
//m[56] = 0;
//m[57] = 0;
//m[58] = 0;
//m[59] = 0;
//m[60] = 0;
//m[61] = 0;
//m[62] = 0;
//m[63] = 0;
//m[64] = 0;
//m[65] = 0;
//m[66] = 0;
//m[67] = 0;
//m[68] = 0;
//m[69] = 0;
//m[70] = 0;
//m[71] = 0;
//m[72] = 0;
//m[73] = 0;
//m[74] = 0;
//m[75] = 0;
//m[76] = 0;
//m[77] = 0;
//m[78] = 0;
//m[79] = 0;
//m[80] = 0;
//m[81] = 0;
//m[82] = 0;
//m[83] = 0;
//m[84] = 0;
//m[85] = 0;
//m[86] = 0;
//m[87] = 0;
//m[88] = 0;
//m[89] = 0;
//m[90] = 0;
//m[91] = 0;
//m[92] = 0;
//m[93] = 0;
//m[94] = 0;
//m[95] = 0;
//m[96] = 0;
//m[97] = 0;
//m[98] = 0;
//m[99] = 0;
//m[100] = 0;
//m[101] = 0;
//m[102] = 0;
//m[103] = 0;
//m[104] = 0;
//m[105] = 0;
//m[106] = 0;
//m[107] = 0;
//m[108] = 0;
//m[109] = 0;
//m[110] = 0;
//m[111] = 0;
//m[112] = 0;
//m[113] = 0;
//m[114] = 0;
//m[115] = 0;
//m[116] = 0;
//m[117] = 0;
//m[118] = 0;
//m[119] = 0;
//m[120] = 0;
//m[121] = 0;
//m[122] = 0;
//m[123] = 0;
//m[124] = 0;
//m[125] = 0;
//m[126] = 0;
//m[127] = 0;
//m[128] = 0;
//m[129] = 0;
//m[130] = 0;
//m[131] = 0;
//m[132] = 0;
//m[133] = 0;
//m[134] = 0;
//m[135] = 0;
//m[136] = 0;
//m[137] = 0;
//m[138] = 0;
//m[139] = 0;
//m[140] = 0;
//m[141] = 0;
//m[142] = 0;
//m[143] = 0;
//m[144] = 0;
//m[145] = 0;
//m[146] = 0;
//m[147] = 0;
//m[148] = 0;
//m[149] = 0;
//m[150] = 0;

m[0]=32'b00100000000010000000000000100000; //addi $t0, $zero, 0x20
m[1]=32'b00100000000010010000000000110111;//addi $t1, $zero, 0x37
m[2]=32'b00000001000010011000000000100100;//and $s0, $t0, $t1
m[3]=32'b00000001000010011000000000100101; //or $s0, $t0, $t1
m[4]=32'b10101100000100000000000000000100; //sw $s0, 4($zero)
m[5]=32'b10101100000010000000000000001000; //sw $t0, 8($zero)
m[6]=32'b00000001000010011000100000100000; //add $s1, $t0, $t1
m[7]=32'b00000001000010011001000000100010;//sub $s2, $t0, $t1
m[8]=32'b00010010001100100000000000001001; //beq $s1, $s2, error0
m[9]=32'b10001100000100010000000000000100; //lw $s1, 4($zero)
m[10]=32'b00110010001100100000000001001000; //andi $s2, $s1, 0x48
m[11]=32'b00010010001100100000000000001001; //beq $s1, $s2, error1
m[12]=32'b10001100000100110000000000001000; //lw $s3, 8($zero)
m[13]=32'b00010010000100110000000000001010; //beq $s0, $s3, error2
m[14]=32'b00000010010100011010000000101010; //slt $s4, $s2, $s1 (Last)
m[15]=32'b00010010100000000000000000001111; //beq $s4, $0, EXIT
m[16]=32'b00000010001000001001000000100000; //add $s2, $s1, $0
m[17]=32'b00001000000000000000000000001110; //j Last
m[18]=32'b00100000000010000000000000000000; //addi $t0, $0, 0(error0)
m[19]=32'b00100000000010010000000000000000; //addi $t1, $0, 0
m[20]=32'b00001000000000000000000000011111; //j EXIT
m[21]=32'b00100000000010000000000000000001; //addi $t0, $0, 1(error1)
m[22]=32'b00100000000010010000000000000001; //addi $t1, $0, 1
m[23]=32'b00001000000000000000000000011111; //j EXIT
m[24]=32'b00100000000010000000000000000010; //addi $t0, $0, 2(error2)
m[25]=32'b00100000000010010000000000000010; //addi $t1, $0, 2
m[26]=32'b00001000000000000000000000011111; //j EXIT
m[27]=32'b00100000000010000000000000000011; //addi $t0, $0, 3(error3)
m[28]=32'b00100000000010010000000000000011; //addi $t1, $0, 3
m[29]=32'b00001000000000000000000000011111; //j EXIT
m[30] = 0;
m[31] = 0;
m[32] = 0;
m[33] = 0;
m[34] = 0;
m[35] = 0;
m[36] = 0;
m[37] = 0;
m[38] = 0;
m[39] = 0;
m[40] = 0;
m[41] = 0;
m[42] = 0;
m[43] = 0;
m[44] = 0;
m[45] = 0;
m[46] = 0;
m[47] = 0;
m[48] = 0;
m[49] = 0;
m[50] = 0;
m[51] = 0;
m[52] = 0;
m[53] = 0;
m[54] = 0;
m[55] = 0;
m[56] = 0;
m[57] = 0;
m[58] = 0;
m[59] = 0;
m[60] = 0;
m[61] = 0;
m[62] = 0;
m[63] = 0;
m[64] = 0;
m[65] = 0;
m[66] = 0;
m[67] = 0;
m[68] = 0;
m[69] = 0;
m[70] = 0;
m[71] = 0;
m[72] = 0;
m[73] = 0;
m[74] = 0;
m[75] = 0;
m[76] = 0;
m[77] = 0;
m[78] = 0;
m[79] = 0;
m[80] = 0;
m[81] = 0;
m[82] = 0;
m[83] = 0;
m[84] = 0;
m[85] = 0;
m[86] = 0;
m[87] = 0;
m[88] = 0;
m[89] = 0;
m[90] = 0;
m[91] = 0;
m[92] = 0;
m[93] = 0;
m[94] = 0;
m[95] = 0;
m[96] = 0;
m[97] = 0;
m[98] = 0;
m[99] = 0;
m[100] = 0;
m[101] = 0;
m[102] = 0;
m[103] = 0;
m[104] = 0;
m[105] = 0;
m[106] = 0;
m[107] = 0;
m[108] = 0;
m[109] = 0;
m[110] = 0;
m[111] = 0;
m[112] = 0;
m[113] = 0;
m[114] = 0;
m[115] = 0;
m[116] = 0;
m[117] = 0;
m[118] = 0;
m[119] = 0;
m[120] = 0;
m[121] = 0;
m[122] = 0;
m[123] = 0;
m[124] = 0;
m[125] = 0;
m[126] = 0;
m[127] = 0;
m[128] = 0;
m[129] = 0;
m[130] = 0;
m[131] = 0;
m[132] = 0;
m[133] = 0;
m[134] = 0;
m[135] = 0;
m[136] = 0;
m[137] = 0;
m[138] = 0;
m[139] = 0;
m[140] = 0;
m[141] = 0;
m[142] = 0;
m[143] = 0;
m[144] = 0;
m[145] = 0;
m[146] = 0;
m[147] = 0;
m[148] = 0;
m[149] = 0;
m[150] = 0;



end
end


endmodule